{"version":3,"sources":["turbopack:///[project]/test-generator-app/src/app/api-test/page.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport { useState } from \"react\";\r\n\r\ninterface ApiTestResult {\r\n  name: string;\r\n  url: string;\r\n  method: string;\r\n  status: number;\r\n  statusText: string;\r\n  success: boolean;\r\n  data: unknown;\r\n  error: string | null;\r\n}\r\n\r\nexport default function ApiTestPage() {\r\n  const [results, setResults] = useState<ApiTestResult[]>([]);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const testEndpoints = async () => {\r\n    setLoading(true);\r\n    setResults([]);\r\n\r\n    const baseUrl = \"http://72.60.41.227:5000\";\r\n    const testCases = [\r\n      {\r\n        name: \"Generate Test API\",\r\n        method: \"POST\",\r\n        url: `${baseUrl}/generate_test`,\r\n        body: {\r\n          user_id: \"123456\",\r\n          trait: \"Communication\",\r\n        },\r\n      },\r\n      {\r\n        name: \"Get MCQs with Document ID\",\r\n        method: \"GET\",\r\n        url: `${baseUrl}/get_mcqs/68bc0f5d81ce955f92f7c385`,\r\n        body: null,\r\n      },\r\n      {\r\n        name: \"Get MCQs with User ID\",\r\n        method: \"GET\",\r\n        url: `${baseUrl}/get_mcqs/123456`,\r\n        body: null,\r\n      },\r\n      {\r\n        name: \"Get MCQs with Query Param\",\r\n        method: \"GET\",\r\n        url: `${baseUrl}/get_mcqs?document_id=68bc0f5d81ce955f92f7c385`,\r\n        body: null,\r\n      },\r\n      {\r\n        name: \"Submit Answers API\",\r\n        method: \"POST\",\r\n        url: `${baseUrl}/submit_answers`,\r\n        body: {\r\n          user_id: \"1234\",\r\n          answers: {\r\n            \"1\": \"Strongly Agree\",\r\n            \"2\": \"Disagree\",\r\n            \"3\": \"Neutral\",\r\n          },\r\n        },\r\n      },\r\n      {\r\n        name: \"Get Results API\",\r\n        method: \"GET\",\r\n        url: `${baseUrl}/get_results/1234`,\r\n        body: null,\r\n      },\r\n    ];\r\n\r\n    const testResults = [];\r\n\r\n    for (const testCase of testCases) {\r\n      try {\r\n        console.log(`Testing: ${testCase.name}`);\r\n\r\n        // Use CORS proxy for all API calls\r\n        const proxyUrl = `https://api.allorigins.win/raw?url=${encodeURIComponent(\r\n          testCase.url\r\n        )}`;\r\n        console.log(`üåê Using CORS proxy: ${proxyUrl}`);\r\n\r\n        const response = await fetch(proxyUrl, {\r\n          method: testCase.method,\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n          body: testCase.body ? JSON.stringify(testCase.body) : undefined,\r\n        });\r\n\r\n        const result: ApiTestResult = {\r\n          name: testCase.name,\r\n          url: testCase.url,\r\n          method: testCase.method,\r\n          status: response.status,\r\n          statusText: response.statusText,\r\n          success: response.ok,\r\n          data: null,\r\n          error: null,\r\n        };\r\n\r\n        if (response.ok) {\r\n          try {\r\n            result.data = await response.json();\r\n          } catch {\r\n            result.data = \"Response is not JSON\";\r\n          }\r\n        } else {\r\n          result.error = `HTTP ${response.status}: ${response.statusText}`;\r\n        }\r\n\r\n        testResults.push(result);\r\n      } catch (error) {\r\n        testResults.push({\r\n          name: testCase.name,\r\n          url: testCase.url,\r\n          method: testCase.method,\r\n          status: 0,\r\n          statusText: \"Network Error\",\r\n          success: false,\r\n          data: null,\r\n          error: error instanceof Error ? error.message : \"Unknown error\",\r\n        });\r\n      }\r\n    }\r\n\r\n    setResults(testResults);\r\n    setLoading(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gray-50 py-8\">\r\n      <div className=\"max-w-6xl mx-auto px-4 sm:px-6 lg:px-8\">\r\n        <div className=\"bg-white shadow rounded-lg p-6\">\r\n          <div className=\"mb-6\">\r\n            <h1 className=\"text-3xl font-bold text-gray-900 mb-2\">\r\n              API Endpoint Tester\r\n            </h1>\r\n            <p className=\"text-gray-600\">\r\n              Test all API endpoints to identify working configurations\r\n            </p>\r\n          </div>\r\n\r\n          <button\r\n            onClick={testEndpoints}\r\n            disabled={loading}\r\n            className=\"px-6 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 disabled:opacity-50 disabled:cursor-not-allowed mb-6\"\r\n          >\r\n            {loading ? \"Testing...\" : \"Test All Endpoints\"}\r\n          </button>\r\n\r\n          {results.length > 0 && (\r\n            <div className=\"space-y-4\">\r\n              <h2 className=\"text-xl font-semibold text-gray-900\">\r\n                Test Results\r\n              </h2>\r\n              {results.map((result, index) => (\r\n                <div\r\n                  key={index}\r\n                  className={`border rounded-lg p-4 ${\r\n                    result.success\r\n                      ? \"border-green-200 bg-green-50\"\r\n                      : \"border-red-200 bg-red-50\"\r\n                  }`}\r\n                >\r\n                  <div className=\"flex items-center justify-between mb-2\">\r\n                    <h3 className=\"font-semibold text-gray-900\">\r\n                      {result.name}\r\n                    </h3>\r\n                    <span\r\n                      className={`px-2 py-1 rounded text-sm font-medium ${\r\n                        result.success\r\n                          ? \"bg-green-100 text-green-800\"\r\n                          : \"bg-red-100 text-red-800\"\r\n                      }`}\r\n                    >\r\n                      {result.success ? \"SUCCESS\" : \"FAILED\"}\r\n                    </span>\r\n                  </div>\r\n\r\n                  <div className=\"text-sm text-gray-600 mb-2\">\r\n                    <strong>Method:</strong> {result.method} |{\" \"}\r\n                    <strong>Status:</strong> {result.status} {result.statusText}\r\n                  </div>\r\n\r\n                  <div className=\"text-sm text-gray-600 mb-2\">\r\n                    <strong>URL:</strong> {result.url}\r\n                  </div>\r\n\r\n                  {result.error && (\r\n                    <div className=\"text-sm text-red-600 mb-2\">\r\n                      <strong>Error:</strong> {result.error}\r\n                    </div>\r\n                  )}\r\n\r\n                  {result.data != null && (\r\n                    <div className=\"text-sm\">\r\n                      <strong>Response:</strong>\r\n                      <pre className=\"mt-1 bg-white p-2 rounded border text-xs overflow-auto max-h-40\">\r\n                        {JSON.stringify(result.data, null, 2)}\r\n                      </pre>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              ))}\r\n            </div>\r\n          )}\r\n\r\n          <div className=\"mt-8\">\r\n            <h2 className=\"text-xl font-semibold text-gray-900 mb-4\">\r\n              API Documentation\r\n            </h2>\r\n            <div className=\"bg-gray-100 rounded-md p-4\">\r\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4 text-sm\">\r\n                <div>\r\n                  <strong>Base URL:</strong> http://72.60.41.227:5000\r\n                </div>\r\n                <div>\r\n                  <strong>Generate Test:</strong> POST /generate_test\r\n                </div>\r\n                <div>\r\n                  <strong>Get Questions:</strong> GET /get_mcqs/{`{id}`}\r\n                </div>\r\n                <div>\r\n                  <strong>Submit Answers:</strong> POST /submit_answers\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":"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"}