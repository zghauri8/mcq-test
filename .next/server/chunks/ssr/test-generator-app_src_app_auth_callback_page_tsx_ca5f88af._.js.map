{"version":3,"sources":["turbopack:///[project]/test-generator-app/src/app/auth/callback/page.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport { useEffect, useState } from \"react\";\r\nimport { useRouter, useSearchParams } from \"next/navigation\";\r\n\r\nexport default function AuthCallbackPage() {\r\n  const router = useRouter();\r\n  const searchParams = useSearchParams();\r\n  const [status, setStatus] = useState(\"processing\");\r\n\r\n  useEffect(() => {\r\n    const handleCallback = async () => {\r\n      try {\r\n        const token = searchParams.get(\"token\");\r\n        const refresh = searchParams.get(\"refresh\");\r\n\r\n        if (!token || !refresh) {\r\n          setStatus(\"error\");\r\n          return;\r\n        }\r\n\r\n        // Store tokens in localStorage\r\n        localStorage.setItem(\"token\", token);\r\n        localStorage.setItem(\"refreshToken\", refresh);\r\n\r\n        // Redirect to dashboard\r\n        setStatus(\"success\");\r\n        setTimeout(() => {\r\n          router.push(\"/dashboard\");\r\n        }, 2000);\r\n      } catch (error) {\r\n        console.error(\"OAuth callback error:\", error);\r\n        setStatus(\"error\");\r\n      }\r\n    };\r\n\r\n    handleCallback();\r\n  }, [searchParams, router]);\r\n\r\n  if (status === \"processing\") {\r\n    return (\r\n      <div className=\"min-h-screen flex items-center justify-center bg-gray-50\">\r\n        <div className=\"text-center\">\r\n          <div className=\"animate-spin rounded-full h-12 w-12 border-t-2 border-b-2 border-blue-500 mx-auto mb-4\"></div>\r\n          <h2 className=\"text-xl font-semibold text-gray-900 mb-2\">\r\n            Completing Authentication...\r\n          </h2>\r\n          <p className=\"text-gray-600\">\r\n            Please wait while we complete your login.\r\n          </p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (status === \"success\") {\r\n    return (\r\n      <div className=\"min-h-screen flex items-center justify-center bg-gray-50\">\r\n        <div className=\"text-center\">\r\n          <div className=\"w-12 h-12 bg-green-100 rounded-full flex items-center justify-center mx-auto mb-4\">\r\n            <svg\r\n              className=\"w-6 h-6 text-green-600\"\r\n              fill=\"none\"\r\n              stroke=\"currentColor\"\r\n              viewBox=\"0 0 24 24\"\r\n            >\r\n              <path\r\n                strokeLinecap=\"round\"\r\n                strokeLinejoin=\"round\"\r\n                strokeWidth={2}\r\n                d=\"M5 13l4 4L19 7\"\r\n              />\r\n            </svg>\r\n          </div>\r\n          <h2 className=\"text-xl font-semibold text-gray-900 mb-2\">\r\n            Login Successful!\r\n          </h2>\r\n          <p className=\"text-gray-600\">Redirecting you to your dashboard...</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"min-h-screen flex items-center justify-center bg-gray-50\">\r\n      <div className=\"text-center\">\r\n        <div className=\"w-12 h-12 bg-red-100 rounded-full flex items-center justify-center mx-auto mb-4\">\r\n          <svg\r\n            className=\"w-6 h-6 text-red-600\"\r\n            fill=\"none\"\r\n            stroke=\"currentColor\"\r\n            viewBox=\"0 0 24 24\"\r\n          >\r\n            <path\r\n              strokeLinecap=\"round\"\r\n              strokeLinejoin=\"round\"\r\n              strokeWidth={2}\r\n              d=\"M6 18L18 6M6 6l12 12\"\r\n            />\r\n          </svg>\r\n        </div>\r\n        <h2 className=\"text-xl font-semibold text-gray-900 mb-2\">\r\n          Authentication Failed\r\n        </h2>\r\n        <p className=\"text-gray-600 mb-4\">\r\n          There was an error completing your login. Please try again.\r\n        </p>\r\n        <button\r\n          onClick={() => router.push(\"/login\")}\r\n          className=\"bg-blue-600 text-white px-4 py-2 rounded-md hover:bg-blue-700\"\r\n        >\r\n          Back to Login\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"names":[],"mappings":"+EAEA,EAAA,EAAA,CAAA,CAAA,OACA,EAAA,EAAA,CAAA,CAAA,OAEe,SAAS,IACtB,IAAM,EAAS,CAAA,EAAA,EAAA,SAAS,AAAT,IACT,EAAe,CAAA,EAAA,EAAA,eAAA,AAAe,IAC9B,CAAC,EAAQ,EAAU,CAAG,CAAA,EAAA,EAAA,QAAQ,AAAR,EAAS,oBA+BrC,CA7BA,CAAA,EAAA,EAAA,SAAA,AAAS,EAAC,KA0BR,CAzBuB,UACrB,GAAI,CACF,IAAM,EAAQ,EAAa,GAAG,CAAC,SACzB,EAAU,EAAa,GAAG,CAAC,WAEjC,GAAI,CAAC,GAAS,CAAC,EAAS,YACtB,EAAU,SAKZ,aAAa,OAAO,CAAC,QAAS,GAC9B,aAAa,OAAO,CAAC,eAAgB,GAGrC,EAAU,WACV,WAAW,KACT,EAAO,IAAI,CAAC,aACd,EAAG,IACL,CAAE,MAAO,EAAO,CACd,QAAQ,KAAK,CAAC,wBAAyB,GACvC,EAAU,QACZ,EACF,GAGF,EAAG,CAAC,EAAc,EAAO,EAErB,AAAW,cAAc,IAEzB,CAAA,EAAA,EAAA,GAAA,EAAC,MAAA,CAAI,UAAU,oEACb,CAAA,EAAA,EAAA,IAAA,EAAC,MAAA,CAAI,UAAU,wBACb,CAAA,EAAA,EAAA,GAAA,EAAC,MAAA,CAAI,UAAU,2FACf,CAAA,EAAA,EAAA,GAAA,EAAC,KAAA,CAAG,UAAU,oDAA2C,iCAGzD,CAAA,EAAA,EAAA,GAAA,EAAC,IAAA,CAAE,UAAU,yBAAgB,mDAQtB,WAAW,CAAtB,EAEA,CAAA,EAAA,EAAA,GAAA,EAAC,MAAA,CAAI,UAAU,oEACb,CAAA,EAAA,EAAA,IAAA,EAAC,MAAA,CAAI,UAAU,wBACb,CAAA,EAAA,EAAA,GAAA,EAAC,MAAA,CAAI,UAAU,6FACb,CAAA,EAAA,EAAA,GAAA,EAAC,MAAA,CACC,UAAU,yBACV,KAAK,OACL,OAAO,eACP,QAAQ,qBAER,CAAA,EAAA,EAAA,GAAA,EAAC,OAAA,CACC,cAAc,QACd,eAAe,QACf,YAAa,EACb,EAAE,uBAIR,CAAA,EAAA,EAAA,GAAA,EAAC,KAAA,CAAG,UAAU,oDAA2C,sBAGzD,CAAA,EAAA,EAAA,GAAA,EAAC,IAAA,CAAE,UAAU,yBAAgB,8CAOnC,CAAA,EAAA,EAAA,GAAA,EAAC,MAAA,CAAI,UAAU,oEACb,CAAA,EAAA,EAAA,IAAA,EAAC,MAAA,CAAI,UAAU,wBACb,CAAA,EAAA,EAAA,GAAA,EAAC,MAAA,CAAI,UAAU,2FACb,CAAA,EAAA,EAAA,GAAA,EAAC,MAAA,CACC,UAAU,uBACV,KAAK,OACL,OAAO,eACP,QAAQ,qBAER,CAAA,EAAA,EAAA,GAAA,EAAC,OAAA,CACC,cAAc,QACd,eAAe,QACf,YAAa,EACb,EAAE,6BAIR,CAAA,EAAA,EAAA,GAAA,EAAC,KAAA,CAAG,UAAU,oDAA2C,0BAGzD,CAAA,EAAA,EAAA,GAAA,EAAC,IAAA,CAAE,UAAU,8BAAqB,gEAGlC,CAAA,EAAA,EAAA,GAAA,EAAC,SAAA,CACC,QAAS,IAAM,EAAO,IAAI,CAAC,UAC3B,UAAU,yEACX,sBAMT"}