{"version":3,"sources":["turbopack:///[project]/test-generator-app/src/app/jobs/[id]/page.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport { useState, useEffect } from \"react\";\r\nimport { useParams, useRouter } from \"next/navigation\";\r\nimport Link from \"next/link\";\r\n\r\ninterface Job {\r\n  id: number;\r\n  title: string;\r\n  description: string;\r\n  requirements: string;\r\n  responsibilities?: string;\r\n  employment_type: string;\r\n  experience_level: string;\r\n  education_level?: string;\r\n  location: string;\r\n  is_remote: boolean;\r\n  salary_range_min?: number;\r\n  salary_range_max?: number;\r\n  salary_currency: string;\r\n  salary_type: string;\r\n  apply_url?: string;\r\n  created_at: string;\r\n  company: {\r\n    id: number;\r\n    name: string;\r\n    logo?: string;\r\n    industry?: string;\r\n    website?: string;\r\n    description?: string;\r\n  };\r\n  category?: {\r\n    id: number;\r\n    name: string;\r\n    description?: string;\r\n  };\r\n  skills: Array<{\r\n    id: number;\r\n    name: string;\r\n    category?: string;\r\n  }>;\r\n  creator: {\r\n    id: number;\r\n    first_name: string;\r\n    last_name: string;\r\n  };\r\n}\r\n\r\nexport default function JobDetailPage() {\r\n  const params = useParams();\r\n  const router = useRouter();\r\n  const [job, setJob] = useState<Job | null>(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState<string | null>(null);\r\n  const [applying, setApplying] = useState(false);\r\n  const [applicationData, setApplicationData] = useState({\r\n    cover_letter: \"\",\r\n  });\r\n\r\n  useEffect(() => {\r\n    const fetchJob = async () => {\r\n      try {\r\n        setLoading(true);\r\n        setError(null);\r\n\r\n        const response = await fetch(\r\n          `http://localhost:3001/api/jobs/${params.id}`\r\n        );\r\n\r\n        if (!response.ok) {\r\n          if (response.status === 404) {\r\n            throw new Error(\"Job not found\");\r\n          }\r\n          throw new Error(\"Failed to fetch job details\");\r\n        }\r\n\r\n        const data = await response.json();\r\n        setJob(data.job);\r\n      } catch (err) {\r\n        setError(err instanceof Error ? err.message : \"An error occurred\");\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    if (params.id) {\r\n      fetchJob();\r\n    }\r\n  }, [params.id]);\r\n\r\n  const handleApply = async () => {\r\n    try {\r\n      setApplying(true);\r\n\r\n      const token = localStorage.getItem(\"token\");\r\n      if (!token) {\r\n        router.push(\"/login\");\r\n        return;\r\n      }\r\n\r\n      const response = await fetch(`http://localhost:3001/api/applications`, {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n        body: JSON.stringify({\r\n          job_id: job?.id,\r\n          cover_letter: applicationData.cover_letter,\r\n        }),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        const errorData = await response.json();\r\n        throw new Error(errorData.message || \"Failed to submit application\");\r\n      }\r\n\r\n      alert(\"Application submitted successfully!\");\r\n      router.push(\"/dashboard\");\r\n    } catch (err) {\r\n      alert(err instanceof Error ? err.message : \"An error occurred\");\r\n    } finally {\r\n      setApplying(false);\r\n    }\r\n  };\r\n\r\n  const formatSalary = (\r\n    min?: number,\r\n    max?: number,\r\n    currency = \"USD\",\r\n    type = \"yearly\"\r\n  ) => {\r\n    if (!min && !max) return \"Salary not specified\";\r\n\r\n    const formatAmount = (amount: number) => {\r\n      return new Intl.NumberFormat(\"en-US\", {\r\n        style: \"currency\",\r\n        currency: currency,\r\n        minimumFractionDigits: 0,\r\n        maximumFractionDigits: 0,\r\n      }).format(amount);\r\n    };\r\n\r\n    if (min && max) {\r\n      return `${formatAmount(min)} - ${formatAmount(max)} per ${type}`;\r\n    }\r\n    if (min) {\r\n      return `${formatAmount(min)}+ per ${type}`;\r\n    }\r\n    if (max) {\r\n      return `Up to ${formatAmount(max)} per ${type}`;\r\n    }\r\n  };\r\n\r\n  const formatDate = (dateString: string) => {\r\n    return new Date(dateString).toLocaleDateString(\"en-US\", {\r\n      year: \"numeric\",\r\n      month: \"long\",\r\n      day: \"numeric\",\r\n    });\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"min-h-screen bg-gray-50 flex items-center justify-center\">\r\n        <div className=\"animate-spin rounded-full h-12 w-12 border-t-2 border-b-2 border-blue-500\"></div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (error || !job) {\r\n    return (\r\n      <div className=\"min-h-screen bg-gray-50 flex items-center justify-center\">\r\n        <div className=\"text-center\">\r\n          <h1 className=\"text-2xl font-bold text-gray-900 mb-4\">\r\n            {error || \"Job not found\"}\r\n          </h1>\r\n          <Link\r\n            href=\"/jobs\"\r\n            className=\"text-blue-600 hover:text-blue-800 underline\"\r\n          >\r\n            Back to Jobs\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gray-50\">\r\n      {/* Header */}\r\n      <div className=\"bg-white shadow-sm\">\r\n        <div className=\"container mx-auto px-4 py-6\">\r\n          <div className=\"flex items-center justify-between\">\r\n            <div>\r\n              <Link\r\n                href=\"/jobs\"\r\n                className=\"text-blue-600 hover:text-blue-800 text-sm font-medium\"\r\n              >\r\n                ‚Üê Back to Jobs\r\n              </Link>\r\n            </div>\r\n            <div className=\"text-sm text-gray-500\">\r\n              Posted on {formatDate(job.created_at)}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"container mx-auto px-4 py-8\">\r\n        <div className=\"flex flex-col lg:flex-row gap-8\">\r\n          {/* Main Content */}\r\n          <div className=\"lg:w-2/3\">\r\n            <div className=\"bg-white rounded-lg shadow-sm p-8\">\r\n              {/* Job Header */}\r\n              <div className=\"mb-8\">\r\n                <h1 className=\"text-3xl font-bold text-gray-900 mb-4\">\r\n                  {job.title}\r\n                </h1>\r\n\r\n                <div className=\"flex items-center mb-4\">\r\n                  <div className=\"flex-1\">\r\n                    <h2 className=\"text-xl font-semibold text-gray-800\">\r\n                      {job.company.name}\r\n                    </h2>\r\n                    {job.company.industry && (\r\n                      <p className=\"text-gray-600\">{job.company.industry}</p>\r\n                    )}\r\n                  </div>\r\n                  {job.company.logo && (\r\n                    <img\r\n                      src={job.company.logo}\r\n                      alt={`${job.company.name} logo`}\r\n                      className=\"w-16 h-16 object-contain\"\r\n                    />\r\n                  )}\r\n                </div>\r\n\r\n                {/* Job Meta */}\r\n                <div className=\"flex flex-wrap gap-4 mb-6\">\r\n                  <div className=\"flex items-center text-gray-600\">\r\n                    <svg\r\n                      className=\"w-5 h-5 mr-2\"\r\n                      fill=\"none\"\r\n                      stroke=\"currentColor\"\r\n                      viewBox=\"0 0 24 24\"\r\n                    >\r\n                      <path\r\n                        strokeLinecap=\"round\"\r\n                        strokeLinejoin=\"round\"\r\n                        strokeWidth={2}\r\n                        d=\"M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z\"\r\n                      />\r\n                      <path\r\n                        strokeLinecap=\"round\"\r\n                        strokeLinejoin=\"round\"\r\n                        strokeWidth={2}\r\n                        d=\"M15 11a3 3 0 11-6 0 3 3 0 016 0z\"\r\n                      />\r\n                    </svg>\r\n                    {job.location || \"Location not specified\"}\r\n                    {job.is_remote && (\r\n                      <span className=\"ml-2 px-2 py-1 bg-purple-100 text-purple-800 text-xs rounded-full\">\r\n                        Remote\r\n                      </span>\r\n                    )}\r\n                  </div>\r\n\r\n                  <div className=\"flex items-center text-gray-600\">\r\n                    <svg\r\n                      className=\"w-5 h-5 mr-2\"\r\n                      fill=\"none\"\r\n                      stroke=\"currentColor\"\r\n                      viewBox=\"0 0 24 24\"\r\n                    >\r\n                      <path\r\n                        strokeLinecap=\"round\"\r\n                        strokeLinejoin=\"round\"\r\n                        strokeWidth={2}\r\n                        d=\"M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z\"\r\n                      />\r\n                    </svg>\r\n                    {job.employment_type.replace(\"-\", \" \")}\r\n                  </div>\r\n\r\n                  <div className=\"flex items-center text-gray-600\">\r\n                    <svg\r\n                      className=\"w-5 h-5 mr-2\"\r\n                      fill=\"none\"\r\n                      stroke=\"currentColor\"\r\n                      viewBox=\"0 0 24 24\"\r\n                    >\r\n                      <path\r\n                        strokeLinecap=\"round\"\r\n                        strokeLinejoin=\"round\"\r\n                        strokeWidth={2}\r\n                        d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\"\r\n                      />\r\n                    </svg>\r\n                    {job.experience_level.replace(\"-\", \" \")}\r\n                  </div>\r\n                </div>\r\n\r\n                {/* Salary */}\r\n                <div className=\"mb-6\">\r\n                  <p className=\"text-lg font-semibold text-gray-900\">\r\n                    {formatSalary(\r\n                      job.salary_range_min,\r\n                      job.salary_range_max,\r\n                      job.salary_currency,\r\n                      job.salary_type\r\n                    )}\r\n                  </p>\r\n                </div>\r\n              </div>\r\n\r\n              {/* Job Description */}\r\n              <div className=\"mb-8\">\r\n                <h3 className=\"text-xl font-semibold text-gray-900 mb-4\">\r\n                  Job Description\r\n                </h3>\r\n                <div className=\"prose max-w-none\">\r\n                  <p className=\"text-gray-700 whitespace-pre-wrap\">\r\n                    {job.description}\r\n                  </p>\r\n                </div>\r\n              </div>\r\n\r\n              {/* Requirements */}\r\n              <div className=\"mb-8\">\r\n                <h3 className=\"text-xl font-semibold text-gray-900 mb-4\">\r\n                  Requirements\r\n                </h3>\r\n                <div className=\"prose max-w-none\">\r\n                  <p className=\"text-gray-700 whitespace-pre-wrap\">\r\n                    {job.requirements}\r\n                  </p>\r\n                </div>\r\n              </div>\r\n\r\n              {/* Responsibilities */}\r\n              {job.responsibilities && (\r\n                <div className=\"mb-8\">\r\n                  <h3 className=\"text-xl font-semibold text-gray-900 mb-4\">\r\n                    Responsibilities\r\n                  </h3>\r\n                  <div className=\"prose max-w-none\">\r\n                    <p className=\"text-gray-700 whitespace-pre-wrap\">\r\n                      {job.responsibilities}\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n              )}\r\n\r\n              {/* Skills */}\r\n              {job.skills && job.skills.length > 0 && (\r\n                <div className=\"mb-8\">\r\n                  <h3 className=\"text-xl font-semibold text-gray-900 mb-4\">\r\n                    Required Skills\r\n                  </h3>\r\n                  <div className=\"flex flex-wrap gap-2\">\r\n                    {job.skills.map((skill) => (\r\n                      <span\r\n                        key={skill.id}\r\n                        className=\"px-3 py-1 bg-blue-100 text-blue-800 text-sm rounded-full\"\r\n                      >\r\n                        {skill.name}\r\n                      </span>\r\n                    ))}\r\n                  </div>\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n\r\n          {/* Sidebar */}\r\n          <div className=\"lg:w-1/3\">\r\n            {/* Apply Section */}\r\n            <div className=\"bg-white rounded-lg shadow-sm p-6 mb-6\">\r\n              <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">\r\n                Apply for this position\r\n              </h3>\r\n\r\n              <div className=\"mb-4\">\r\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                  Cover Letter\r\n                </label>\r\n                <textarea\r\n                  value={applicationData.cover_letter}\r\n                  onChange={(e) =>\r\n                    setApplicationData({\r\n                      ...applicationData,\r\n                      cover_letter: e.target.value,\r\n                    })\r\n                  }\r\n                  rows={6}\r\n                  className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n                  placeholder=\"Tell us why you're interested in this position...\"\r\n                />\r\n              </div>\r\n\r\n              <button\r\n                onClick={handleApply}\r\n                disabled={applying}\r\n                className=\"w-full bg-blue-600 text-white py-2 px-4 rounded-md hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500 disabled:opacity-50 disabled:cursor-not-allowed\"\r\n              >\r\n                {applying ? \"Applying...\" : \"Apply Now\"}\r\n              </button>\r\n\r\n              {job.apply_url && (\r\n                <div className=\"mt-4 text-center\">\r\n                  <p className=\"text-sm text-gray-600 mb-2\">\r\n                    Or apply directly:\r\n                  </p>\r\n                  <a\r\n                    href={job.apply_url}\r\n                    target=\"_blank\"\r\n                    rel=\"noopener noreferrer\"\r\n                    className=\"text-blue-600 hover:text-blue-800 underline\"\r\n                  >\r\n                    Apply on Company Website\r\n                  </a>\r\n                </div>\r\n              )}\r\n            </div>\r\n\r\n            {/* Company Info */}\r\n            <div className=\"bg-white rounded-lg shadow-sm p-6\">\r\n              <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">\r\n                About {job.company.name}\r\n              </h3>\r\n\r\n              {job.company.description && (\r\n                <p className=\"text-gray-700 mb-4\">{job.company.description}</p>\r\n              )}\r\n\r\n              <div className=\"space-y-2\">\r\n                {job.company.website && (\r\n                  <div>\r\n                    <span className=\"text-sm font-medium text-gray-600\">\r\n                      Website:\r\n                    </span>\r\n                    <a\r\n                      href={job.company.website}\r\n                      target=\"_blank\"\r\n                      rel=\"noopener noreferrer\"\r\n                      className=\"ml-2 text-blue-600 hover:text-blue-800 underline\"\r\n                    >\r\n                      {job.company.website}\r\n                    </a>\r\n                  </div>\r\n                )}\r\n\r\n                {job.company.industry && (\r\n                  <div>\r\n                    <span className=\"text-sm font-medium text-gray-600\">\r\n                      Industry:\r\n                    </span>\r\n                    <span className=\"ml-2 text-gray-700\">\r\n                      {job.company.industry}\r\n                    </span>\r\n                  </div>\r\n                )}\r\n              </div>\r\n\r\n              <div className=\"mt-4\">\r\n                <Link\r\n                  href={`/jobs?company_id=${job.company.id}`}\r\n                  className=\"text-blue-600 hover:text-blue-800 text-sm font-medium\"\r\n                >\r\n                  View all jobs from {job.company.name}\r\n                </Link>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n"],"names":[],"mappings":"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"}